.TH _PRINTF 3 "2025-03-26" "Version 1.0" "Custom C Library Functions"
.SH NAME
_printf \- formatted output conversion

.SH SYNOPSIS
.B #include <stdarg.h>
.B #include <unistd.h>

.B int _printf(const char *format, ...);

.SH DESCRIPTION
The
.B _printf
function produces output according to a format string.
It writes output to the standard output stream (stdout).

The format string is composed of ordinary characters and
conversion specifiers, which begin with a '%' character
and are replaced with corresponding arguments.

Currently, the following conversion specifiers are supported:
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a null-terminated string.
.TP
.B %%
Prints a literal '%' character.
.TP
.B %d, %i
Prints an integer in decimal notation.

.SH RETURN VALUE
The function returns the number of characters written to stdout,
excluding the octet null '\0'. If an error occurs, it returns -1.

.SH EXAMPLES
.B Example usage:
.nf
#include "main.h"

int main(void)
{
    _printf("Hello, %s! You are %d years old.\n", "Alice", 25);
    return 0;
}
.fi

Output:
.nf
Hello, Alice! You are 25 years old.
.fi

.SH NOTES
- This implementation does not support field width, precision,
flag characters, or length modifiers.
- The only system calls used are `write` for output and
`malloc`/`free` for memory management if needed.

.SH SEE ALSO
.BR printf(3), write(2)

.SH AUTHOR
Hammadi Hamza
Delphine Coutouly-labord
